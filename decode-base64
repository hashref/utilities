#!/usr/bin/env python3

import sys
import os.path
import base64


def decode_b64(encoded_string: str) -> str:
    """
    Decodes a `base64` encoded string

    Args:
        encoded_string (str): base64 encoded string

    Returns:
        str: decoded string
    """

    decodedBytes = base64.b64decode(encoded_string)

    return str(decodedBytes, "utf-8")


def read_file_content(filename: str) -> str:
    """
    Reads the contents of a file.

    Args:
        filename (str): File to read the contents from

    Returns:
        str: Data read from the file
    """

    content = ""

    with open(filename, "r") as fh:
        lines = fh.readlines()
        for line in lines:
            content += line

    return content


def write_contents_to_file(filename: str, content: str) -> None:
    """
    Write contents to a file.

    Args:
        filename (str): name of the file to write the content to.
        content (str): data to write to the file.

    Raises:
        FileExistsError: Error raised if the filename already exists
    """

    if os.path.isfile(filename):
        raise FileExistsError("File already exists!")

    with open(filename, "w") as fh:
        fh.write(content)


if __name__ == "__main__":
    for index, filename in enumerate(sys.argv[1:]):
        print("Decoding {}".format(filename))
        try:
            encoded_b64 = read_file_content(filename)
            decoded_data = decode_b64(encoded_b64)

            write_filename = str.join("_decoded", os.path.splitext(filename))
            write_contents_to_file(write_filename, decoded_data)
            print("Success")

        except Exception as e:
            print("Processing Error: {0}".format(e))
